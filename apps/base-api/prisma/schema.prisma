// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique
  email     String    @unique @db.Text
  firstName String    @db.Text
  lastName  String    @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  disabled  Boolean   @default(false)
  userRole  UserRole?
}

model Role {
  id          String           @id @unique
  name        String           @unique @db.Text
  permissions RolePermission[]
  users       UserRole[]
}

model UserRole {
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String
  assignedAt DateTime @default(now())

  @@id([userId, roleId])
}

model Permission {
  id    String           @id @unique
  name  String           @db.Text
  roles RolePermission[]
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String
  assignedAt   DateTime   @default(now())
  assignedBy   String     @db.Text

  @@id([roleId, permissionId])
}

model Entity {
  id        String   @id @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Credential {
  email    String @id @unique
  salt     String @db.VarChar
  password String @db.VarChar
}
